{"version":3,"file":"/packages/mrt:csv-to-collection.js","sources":["mrt:csv-to-collection/CsvToCollection.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,kC;AACA,a;AACA,U;;AAEA,c;AACA,+C;AACA,oE;AACA,M;AACA,iC;AACA,qC;AACA,K;AACA,I;;AAEA,wB;AACA,gD;AACA,yE;AACA,wC;AACA,kC;AACA,qB;AACA,oB;AACA,kB;AACA,kB;AACA,oB;AACA,yD;AACA,uB;AACA,8C;AACA,O;AACA,sB;AACA,M;AACA,oE;AACA,0H;AACA,M;AACA,G;;AAEA,c","sourcesContent":["// Generated by CoffeeScript 1.7.1\n(function() {\n  var CSV;\n\n  this.c2c = {\n    createCollection: function(publicCsvPath) {\n      return new Meteor.Collection(this.getFilename(publicCsvPath));\n    },\n    getFilename: function(path) {\n      return (path.split(\"/\")).pop();\n    }\n  };\n\n  if (Meteor.isServer) {\n    CSV = Npm.require(\"comma-separated-values\");\n    this.c2c.addCsvStringToCollection = function(collection, csvString) {\n      var doc, _i, _len, _ref, _results;\n      _ref = (new CSV(csvString, {\n        header: true,\n        cast: false,\n        line: \"\\n\"\n      })).parse();\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        doc = _ref[_i];\n        _results.push(collection.insert(doc));\n      }\n      return _results;\n    };\n    this.c2c.addPublicCsvToCollection = function(collection, path) {\n      return this.addCsvStringToCollection(collection, String((Npm.require(\"fs\")).readFileSync(\"../client/app/\" + path)));\n    };\n  }\n\n}).call(this);\n"]}